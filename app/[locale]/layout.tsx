import { RootLayoutType } from "@/types";
import { notFound } from "next/navigation";
import { Roboto } from "next/font/google";
import type { Metadata } from "next";
import { locales } from "@/constants";
import { AuthProvider } from "@/context/authContext";
import { AppWrapper } from "@/components";
import "./globals.css";
import { PostProvider } from "@/context/postContext";

const roboto = Roboto({
  subsets: ["latin"],
  weight: ["300", "400", "500", "700"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function LocaleLayout({
  children,
  params: { locale },
}: RootLayoutType) {
  // Validate that the incoming `locale` parameter is valid
  const isValidLocale = locales.some((cur) => cur === locale);
  if (!isValidLocale) notFound();

  return (
    <html lang={locale}>
      <body className={roboto.className}>
        <AuthProvider>
          <AppWrapper>
            <PostProvider>{children}</PostProvider>
          </AppWrapper>
        </AuthProvider>
      </body>
    </html>
  );
}
